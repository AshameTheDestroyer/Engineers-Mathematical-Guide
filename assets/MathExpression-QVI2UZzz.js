import{r as y,a5 as C,a6 as P,j as O,d as H}from"./index-nnsqk7fk.js";var c=function(){return(c=Object.assign||function(t){for(var n,i=1,r=arguments.length;i<r;i++)for(var e in n=arguments[i])Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e]);return t}).apply(this,arguments)},_=function(t,n){var i={};for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&n.indexOf(e)<0&&(i[e]=t[e]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,e=Object.getOwnPropertySymbols(t);r<e.length;r++)n.indexOf(e[r])<0&&Object.prototype.propertyIsEnumerable.call(t,e[r])&&(i[e[r]]=t[e[r]]);return i},m=function(t){return"Typesetting failed: ".concat(t.message!==void 0?t.message:JSON.stringify(t))},I=function(t){function n(){var p;g==="every"&&E&&v==="post"&&s.current!==null&&(s.current.style.visibility=(p=(p=b.style)==null?void 0:p.visibility)!=null?p:"visible"),M.current||(g==="first"&&s.current!==null&&(s.current.style.visibility="visible"),e&&e(),M.current=!0),x&&x(),w.current=!1}var r=t.inline,i=r!==void 0&&r,r=t.hideUntilTypeset,e=t.onInitTypeset,x=t.onTypeset,a=t.text,d=t.dynamic,h=t.typesettingOptions,T=t.renderMode,R=t.children,b=_(t,["inline","hideUntilTypeset","onInitTypeset","onTypeset","text","dynamic","typesettingOptions","renderMode","children"]),J=y.useRef(""),s=y.useRef(null),u=y.useContext(C),g=r??(u==null?void 0:u.hideUntilTypeset),v=T??(u==null?void 0:u.renderMode),f=h??(u==null?void 0:u.typesettingOptions),E=d!==!1&&(d||!1),M=y.useRef(!1),w=y.useRef(!1);return!w.current&&s.current!==null&&E&&g==="every"&&v==="post"&&(s.current.style.visibility="hidden"),(typeof window<"u"?y.useLayoutEffect:y.useEffect)(function(){if((E||!M.current)&&s.current!==null){if(!u)throw Error("MathJax was not loaded, did you use the MathJax component outside of a MathJaxContext?");if(v==="pre"){if(!(typeof(p=a)=="string"&&0<p.length))throw Error(`Render mode 'pre' requires text prop to be set and non-empty, which was currently "`.concat(a,'"'));if(!h||!h.fn)throw Error("Render mode 'pre' requires 'typesettingOptions' prop with 'fn' property to be set on MathJax element or in the MathJaxContext");if(u.version===2)throw Error("Render mode 'pre' only available with MathJax 3, and version 2 is currently in use")}v!=="post"&&a===J.current||w.current||(w.current=!0,u.version===3?u.promise.then(function(o){var j;v==="pre"?(j=function(l){J.current=a,o.startup.document.clear(),o.startup.document.updateDocument(),s.current!==null&&(s.current.innerHTML=l.outerHTML),n()},h.fn.endsWith("Promise")?o.startup.promise.then(function(){return o[f.fn](a,c(c({},(f==null?void 0:f.options)||{}),{display:!i}))}).then(j).catch(function(l){throw n(),Error(m(l))}):o.startup.promise.then(function(){var l=o[f.fn](a,c(c({},(f==null?void 0:f.options)||{}),{display:!i}));j(l)}).catch(function(l){throw n(),Error(m(l))})):o.startup.promise.then(function(){return o.typesetClear([s.current]),o.typesetPromise([s.current])}).then(n).catch(function(l){throw n(),Error(m(l))})}).catch(function(o){throw n(),Error(m(o))}):u.promise.then(function(o){o.Hub.Queue(["Typeset",o.Hub,s.current]),o.Hub.Queue(n)}).catch(function(o){throw n(),Error(m(o))}))}var p}),P.createElement("span",c({},b,{style:c(c({display:i?"inline":"block"},b.style),{visibility:g?"hidden":(t=b.style)==null?void 0:t.visibility}),ref:s}),R)};const S=({id:t,ref:n,inline:i,variant:r,children:e,className:x,...a})=>{const d=()=>O.jsx(I,{children:`\\(${i?"":"\\displaystyle"} ${e}\\)`});return r==null?O.jsx(d,{}):O.jsx(H,{id:t,ref:n,className:x,variant:r,...a,children:O.jsx(d,{})})};export{S as M};
